import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import ShowIntroFortBoyard from '@/components/ShowIntroFortBoyard';
import ShowOutroFortBoyard from '@/components/ShowOutroFortBoyard';

const FortBoyard = () => {
  const [showIntro, setShowIntro] = useState(false);
  const [showOutro, setShowOutro] = useState(false);

  const challenges = [
    {
      id: 1,
      title: "–ò—Å–ø—ã—Ç–∞–Ω–∏–µ —Å –∫–ª—é—á–∞–º–∏",
      thumbnail: "üóùÔ∏è",
      description: "–ö–æ–º–∞–Ω–¥–∞ –∏—â–µ—Ç –∫–ª—é—á–∏ –≤ —Ç–µ–º–Ω—ã—Ö –ø–æ–¥–∑–µ–º–µ–ª—å—è—Ö —Ñ–æ—Ä—Ç–∞"
    },
    {
      id: 2,
      title: "–ë–∞—à–Ω—è —Å —Å–æ–∫—Ä–æ–≤–∏—â–∞–º–∏",
      thumbnail: "üí∞",
      description: "–£—á–∞—Å—Ç–Ω–∏–∫ –∑–∞–±–∏—Ä–∞–µ—Ç—Å—è –Ω–∞ –±–∞—à–Ω—é –∑–∞ –∑–æ–ª–æ—Ç—ã–º–∏ –º–æ–Ω–µ—Ç–∞–º–∏"
    },
    {
      id: 3,
      title: "–ó–∞–≥–∞–¥–∫–∞ –°—Ç–∞—Ä—Ü–∞ –§—É—Ä–∞",
      thumbnail: "üßô",
      description: "–ú—É–¥—Ä—ã–π —Å—Ç–∞—Ä–µ—Ü –∑–∞–¥–∞–µ—Ç –∫–æ–º–∞–Ω–¥–µ —Ö–∏—Ç—Ä—É—é –∑–∞–≥–∞–¥–∫—É"
    },
    {
      id: 4,
      title: "–í–æ–¥–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ",
      thumbnail: "üåä",
      description: "–ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∑–∞—Ç–æ–ø–ª–µ–Ω–Ω—ã–π —Ç–æ–Ω–Ω–µ–ª—å —Ñ–æ—Ä—Ç–∞"
    },
    {
      id: 5,
      title: "–ö–æ–º–Ω–∞—Ç–∞ —Ç–∏–≥—Ä–æ–≤",
      thumbnail: "üêÖ",
      description: "–î–æ–±—ã—á–∞ –∫–ª—é—á–∞ –∏–∑ –∫–ª–µ—Ç–∫–∏ —Å —Ç–∏–≥—Ä–∞–º–∏"
    },
    {
      id: 6,
      title: "–ü–æ–¥–≤–µ—Å–Ω–æ–π –º–æ—Å—Ç",
      thumbnail: "üåâ",
      description: "–ü–µ—Ä–µ—Ö–æ–¥ –ø–æ –≤–µ—Ä–µ–≤–æ—á–Ω–æ–º—É –º–æ—Å—Ç—É –Ω–∞–¥ –ø—Ä–æ–ø–∞—Å—Ç—å—é"
    },
    {
      id: 7,
      title: "–°–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–∞",
      thumbnail: "üíé",
      description: "–§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ - —Å–æ–±—Ä–∞—Ç—å –º–∞–∫—Å–∏–º—É–º –∑–æ–ª–æ—Ç–∞"
    },
    {
      id: 8,
      title: "–í—Å—Ç—Ä–µ—á–∞ —Å —Ö—Ä–∞–Ω–∏—Ç–µ–ª–µ–º",
      thumbnail: "üè∞",
      description: "–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–≥–∞–¥–∫–∞ –æ—Ç —Ö—Ä–∞–Ω–∏—Ç–µ–ª—è —Ñ–æ—Ä—Ç–∞"
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-b from-amber-50 to-yellow-50 dark:from-gray-900 dark:to-amber-950">
      {showIntro && <ShowIntroFortBoyard onComplete={() => setShowIntro(false)} />}
      {showOutro && <ShowOutroFortBoyard onComplete={() => setShowOutro(false)} />}

      <div className="container mx-auto px-4 py-12">
        <div className="text-center mb-12 relative">
          <div className="absolute inset-0 flex items-center justify-center opacity-10">
            <div className="text-[20rem]">üè∞</div>
          </div>
          
          <div className="relative z-10">
            {[...Array(30)].map((_, i) => (
              <div
                key={i}
                className="absolute text-2xl opacity-20"
                style={{
                  left: `${Math.random() * 100}%`,
                  top: `${Math.random() * 100}%`,
                  animation: `float ${15 + Math.random() * 10}s linear infinite`,
                  animationDelay: `${Math.random() * 5}s`
                }}
              >
                ‚öúÔ∏è
              </div>
            ))}
            
            <h1 className="text-7xl font-black text-transparent bg-clip-text bg-gradient-to-r from-amber-600 to-yellow-600 mb-4 drop-shadow-lg">
              üè∞ –§–û–†–¢ –ë–û–Ø–†–î
            </h1>
            <p className="text-3xl font-bold text-amber-700 dark:text-amber-400 mb-2">
              –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –ª–µ–≥–µ–Ω–¥—ã
            </p>
            <p className="text-xl text-amber-600 dark:text-amber-500 mb-8">
              –ü—Ä–µ–º—å–µ—Ä–∞ ‚Ä¢ 10 –Ω–æ—è–±—Ä—è ‚Ä¢ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∏ –≤ 21:30
            </p>
            
            <div className="flex gap-4 justify-center mb-12">
              <Button 
                size="lg"
                className="bg-gradient-to-r from-amber-600 to-yellow-600 hover:from-amber-700 hover:to-yellow-700 text-white font-bold shadow-xl"
                onClick={() => setShowIntro(true)}
              >
                <Icon name="Play" className="mr-2" />
                –ó–∞—Å—Ç–∞–≤–∫–∞ —à–æ—É
              </Button>
              <Button 
                size="lg"
                variant="outline"
                className="border-2 border-amber-600 text-amber-700 hover:bg-amber-50 dark:text-amber-400 dark:hover:bg-amber-950 font-bold"
                onClick={() => window.location.href = '/'}
              >
                <Icon name="Home" className="mr-2" />
                –ù–∞ –≥–ª–∞–≤–Ω—É—é
              </Button>
            </div>
          </div>
        </div>

        <Card className="mb-12 bg-gradient-to-br from-amber-100 to-yellow-100 dark:from-amber-900/50 dark:to-yellow-900/50 border-2 border-amber-400">
          <CardHeader>
            <CardTitle className="text-3xl flex items-center gap-3">
              <span className="text-5xl">‚öîÔ∏è</span>
              –û —à–æ—É
            </CardTitle>
            <CardDescription className="text-lg text-foreground/80">
              –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–æ–µ —à–æ—É –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω—ã!
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4 text-lg">
            <p className="leading-relaxed">
              <strong className="text-amber-700 dark:text-amber-400">–§–æ—Ä—Ç –ë–æ—è—Ä–¥</strong> - —ç—Ç–æ –≥—Ä–∞–Ω–¥–∏–æ–∑–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ, –≥–¥–µ –∫–æ–º–∞–Ω–¥—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ 
              –ø—Ä–æ—Ö–æ–¥—è—Ç –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è –≤ –Ω–∞—Å—Ç–æ—è—â–µ–π –∫—Ä–µ–ø–æ—Å—Ç–∏ –Ω–∞ –æ—Å—Ç—Ä–æ–≤–µ. –§–∏–∑–∏—á–µ—Å–∫–∏–µ –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, 
              –≤—Å—Ç—Ä–µ—á–∏ —Å–æ —Å—Ç–∞—Ä—Ü–µ–º –§—É—Ä–æ–º, –ø–æ–∏—Å–∫–∏ –∫–ª—é—á–µ–π –∏ –∑–æ–ª–æ—Ç–∞ - –≤—Å—ë —ç—Ç–æ –∂–¥—ë—Ç —Å–º–µ–ª—ã—Ö –∏—Å–∫–∞—Ç–µ–ª–µ–π –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π!
            </p>
            <div className="flex gap-4 flex-wrap text-2xl justify-center py-4">
              <span>üóùÔ∏è –ö–ª—é—á–∏</span>
              <span>üí∞ –ó–æ–ª–æ—Ç–æ</span>
              <span>üßô –ó–∞–≥–∞–¥–∫–∏</span>
              <span>‚öîÔ∏è –ò—Å–ø—ã—Ç–∞–Ω–∏—è</span>
              <span>üèÜ –ü–æ–±–µ–¥–∞</span>
            </div>
          </CardContent>
        </Card>

        <div className="mb-8">
          <h2 className="text-4xl font-bold text-center mb-8 text-amber-700 dark:text-amber-400 flex items-center justify-center gap-3">
            <span className="text-5xl">üé¨</span>
            –ò—Å–ø—ã—Ç–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –≤—ã–ø—É—Å–∫–∞
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {challenges.map((challenge) => (
              <Card 
                key={challenge.id}
                className="hover:scale-105 transition-transform cursor-pointer bg-gradient-to-br from-amber-50 to-yellow-50 dark:from-amber-900/30 dark:to-yellow-900/30 border-2 border-amber-300 hover:border-amber-500"
              >
                <CardHeader>
                  <div className="text-7xl text-center mb-2">{challenge.thumbnail}</div>
                  <CardTitle className="text-xl text-center">{challenge.title}</CardTitle>
                  <CardDescription className="text-center text-sm">
                    {challenge.description}
                  </CardDescription>
                </CardHeader>
              </Card>
            ))}
          </div>
        </div>

        <Card className="bg-gradient-to-br from-yellow-100 to-amber-100 dark:from-yellow-900/50 dark:to-amber-900/50 border-2 border-yellow-400">
          <CardHeader>
            <CardTitle className="text-3xl flex items-center gap-3">
              <span className="text-5xl">üë•</span>
              –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–≤–æ–≥–æ –≤—ã–ø—É—Å–∫–∞
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
              {['–ö–∞–ø–∏—Ç–∞–Ω –ê–ª–µ–∫—Å–µ–π', '–°–ø–æ—Ä—Ç—Å–º–µ–Ω–∫–∞ –ú–∞—Ä–∏—è', '–£–º–Ω–∏–∫ –î–º–∏—Ç—Ä–∏–π', '–°–∏–ª–∞—á –ò–≤–∞–Ω', '–ê–∫—Ä–æ–±–∞—Ç–∫–∞ –ê–Ω–Ω–∞', '–°—Ç—Ä–∞—Ç–µ–≥ –ï–ª–µ–Ω–∞'].map((member, i) => (
                <div key={i} className="text-center p-4 bg-white/50 dark:bg-gray-800/50 rounded-lg border-2 border-amber-300">
                  <div className="text-5xl mb-2">
                    {i % 2 === 0 ? 'üßë' : 'üë©'}
                  </div>
                  <p className="font-bold text-amber-700 dark:text-amber-400">{member}</p>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        <div className="mt-12 text-center">
          <Button 
            size="lg"
            className="bg-gradient-to-r from-yellow-600 to-amber-600 hover:from-yellow-700 hover:to-amber-700 text-white font-bold text-xl px-8 py-6 shadow-2xl"
            onClick={() => setShowOutro(true)}
          >
            <Icon name="Film" className="mr-2" size={28} />
            –§–∏–Ω–∞–ª—å–Ω–∞—è –∑–∞—Å—Ç–∞–≤–∫–∞
          </Button>
        </div>
      </div>

      <style>{`
        @keyframes float {
          from { transform: translateY(0) rotate(0deg); }
          to { transform: translateY(-100vh) rotate(360deg); }
        }
      `}</style>
    </div>
  );
};

export default FortBoyard;
